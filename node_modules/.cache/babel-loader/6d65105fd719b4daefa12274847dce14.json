{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanyjohnson/Desktop/GA/projects/ReportIn/ReportIn-Frontend/reportin/src/Memos.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Memos() {\n  _s();\n\n  const [memo, setMemo] = useState({\n    title: \"\",\n    body: \"\",\n    createdOn: \"\"\n  });\n  const [memos, setMemos] = useState([{\n    title: \"\",\n    body: \"\",\n    createdOn: \"\",\n    _id: \"\"\n  }]);\n  const [isPut, setIsPut] = useState(false);\n  const [updateMemo, setUpdateMemo] = useState({\n    title: \"\",\n    body: \"\",\n    createdOn: \"\",\n    id: \"\"\n  });\n  useEffect(() => {\n    fetch('/memos').then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(jsonRes => setMemos(jsonRes)).catch(err => console.log(err));\n  }, [memos]);\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMemo(prevInput => {\n      return { ...prevInput,\n        [name]: value\n      };\n    });\n  }\n\n  function addMemo(event) {\n    event.preventDefault();\n    const newMemo = {\n      title: memo.title,\n      body: memo.body,\n      createdOn: memo.createdOn\n    };\n    axios.post('/newmemo', newMemo);\n    console.log(newMemo);\n    alert(\"Memo was added\");\n    setMemo({\n      title: \"\",\n      body: \"\",\n      createdOn: \"\"\n    });\n  }\n\n  function deleteMemo(id) {\n    axios.delete(\"/delete/\" + id);\n    alert(\"memo deleted\");\n    console.log(`Deleted item with id ${id}`);\n  }\n\n  function openUpdate(id) {\n    setIsPut(true);\n    setUpdateMemo(prevInput => {\n      return { ...prevInput,\n        id: id\n      };\n    });\n  }\n\n  function updatedMemo(id) {\n    axios.put('/update/' + id, updateMemo);\n    alert(\"memo updated\");\n    console.log('Memo updated');\n    setMemo({\n      title: \"\",\n      body: \"\",\n      createdOn: \"\"\n    });\n  }\n\n  function handleUpdate(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setUpdateMemo(prevInput => {\n      return { ...prevInput,\n        [name]: value\n      };\n    });\n    console.log(updateMemo);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Memos\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"memotitle\",\n      children: \"Memos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), !isPut ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memoform\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Memo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        name: \"title\",\n        value: memo.title,\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        name: \"body\",\n        value: memo.body,\n        placeholder: \"Body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        name: \"createdOn\",\n        value: memo.createdOn,\n        type: \"date\",\n        id: \"createdOn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addMemo,\n        children: \"Add Memo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memoform\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Update Memo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleUpdate,\n        name: \"title\",\n        value: updateMemo.title,\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleUpdate,\n        name: \"body\",\n        value: updateMemo.body,\n        placeholder: \"Body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleUpdate,\n        name: \"createdOn\",\n        value: updateMemo.createdOn,\n        type: \"date\",\n        id: \"createdOn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updatedMemo(updateMemo.id),\n        children: \"Update Memo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }, this), memos.map(memo => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"memolist\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: memo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: memo.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => openUpdate(memo._id),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteMemo(memo._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this)]\n        }, memo._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Memos, \"sRHVDR/B/CRH5XVso5O3YMfQPNY=\");\n\n_c = Memos;\nexport default Memos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Memos\");","map":{"version":3,"sources":["/Users/tiffanyjohnson/Desktop/GA/projects/ReportIn/ReportIn-Frontend/reportin/src/Memos.js"],"names":["useState","useEffect","axios","Memos","memo","setMemo","title","body","createdOn","memos","setMemos","_id","isPut","setIsPut","updateMemo","setUpdateMemo","id","fetch","then","res","ok","json","jsonRes","catch","err","console","log","handleChange","event","name","value","target","prevInput","addMemo","preventDefault","newMemo","post","alert","deleteMemo","delete","openUpdate","updatedMemo","put","handleUpdate","map"],"mappings":"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","sourcesContent":["import\"./App.css\"\nimport {useState, useEffect} from \"react\"\nimport axios from \"axios\"\n\n\nfunction Memos() {\n\n    const [memo, setMemo] = useState(\n        {\n            title: \"\",\n            body: \"\",\n            createdOn: \"\"\n        }\n    )\n\n    const [memos, setMemos] = useState([{\n        title: \"\",\n        body: \"\",\n        createdOn: \"\",\n        _id: \"\",\n    }])\n\n    const [isPut, setIsPut] = useState(false)\n\n    const [updateMemo, setUpdateMemo] = useState({\n        title: \"\",\n        body: \"\",\n        createdOn: \"\",\n        id: \"\"\n    })\n\n    useEffect(() => {\n        fetch('/memos').then((res) => {\n                if (res.ok) {\n                    return res.json()\n                }\n            })\n        .then(jsonRes => setMemos(jsonRes))\n        .catch(err => console.log(err))\n    }, [memos])\n\n    function handleChange(event) {\n        const {name, value} = event.target\n        setMemo(prevInput => {\n            return (\n                {\n                    ...prevInput,\n                    [name]: value\n                }\n            )\n        })\n    }\n\n    function addMemo(event) {\n        event.preventDefault()\n        const newMemo = {\n            title: memo.title,\n            body: memo.body,\n            createdOn: memo.createdOn\n        }\n        axios.post('/newmemo', newMemo)\n        console.log(newMemo)\n        alert(\"Memo was added\")\n\n        setMemo({\n            title: \"\",\n            body: \"\",\n            createdOn: \"\"\n        })\n    }\n\n    function deleteMemo(id) {\n        axios.delete(\"/delete/\" + id)\n        alert(\"memo deleted\")\n        console.log(`Deleted item with id ${id}`)\n\n    }\n\n    function openUpdate(id) {\n        setIsPut(true)\n        setUpdateMemo(prevInput => {\n            return (\n                {\n                    ...prevInput,\n                    id: id\n\n                }\n            )\n        })\n    }\n\n    function updatedMemo(id) {\n        axios.put('/update/' + id, updateMemo)\n        alert(\"memo updated\")\n        console.log('Memo updated')\n\n        setMemo({\n            title: \"\",\n            body: \"\",\n            createdOn: \"\"\n        })\n    }\n\n    function handleUpdate(event) {\n        const {name, value} = event.target\n        setUpdateMemo(prevInput => {\n            return (\n                {\n                    ...prevInput,\n                    [name]: value\n                }\n            )\n        })\n        console.log(updateMemo)\n    }\n\n    return (\n        <div className=\"Memos\">\n            <h1 id=\"memotitle\">Memos</h1>\n\n            {!isPut ?\n            (<div className=\"memoform\">\n                <h3>Add Memo</h3>\n                <input onChange={handleChange} name=\"title\" value={memo.title} placeholder=\"Title\"></input>\n                <input onChange={handleChange} name=\"body\" value={memo.body} placeholder=\"Body\"></input>\n                <input onChange={handleChange} name=\"createdOn\" value={memo.createdOn}  type=\"date\" id=\"createdOn\"></input>\n                <button onClick={addMemo}>Add Memo</button>\n            </div>) : (\n                <div className=\"memoform\">\n                <h3>Update Memo</h3>\n                <input onChange={handleUpdate} name=\"title\" value={updateMemo.title} placeholder=\"Title\"></input>\n                <input onChange={handleUpdate} name=\"body\" value={updateMemo.body} placeholder=\"Body\"></input>\n                <input onChange={handleUpdate} name=\"createdOn\" value={updateMemo.createdOn}  type=\"date\" id=\"createdOn\"></input>\n                <button onClick={() => updatedMemo(updateMemo.id)}>Update Memo</button>\n            </div>\n            )}\n            {memos.map((memo) => {\n                return(\n                    <div>\n                        <div className=\"memolist\" key={memo._id}>\n                            <h4>{memo.title}</h4>\n                            <p>{memo.body}</p>\n                            <button onClick={() => openUpdate(memo._id)}>Update</button>\n                            <button onClick={() => deleteMemo(memo._id)}>Delete</button>\n                        </div>\n                    </div>\n                )\n            })}\n\n        </div>\n    )\n}\n\n\nexport default Memos"]},"metadata":{},"sourceType":"module"}